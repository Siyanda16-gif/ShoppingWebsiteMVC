@model ShoppingWebsiteMVC.Models.Product
  

@{
    ViewBag.Title = "ProductView";
}
<style>
    .container {
        max-width: 100%;
        padding: 0;
    }
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
    #Itemno{
        background:none;
        font-size:large;
        font-weight:bold;
    }
    .ty:hover{
        zoom:initial;
    }
    body {
        background-color:grey;
    }
</style>
    @Html.Partial("_alertdiv")
<div class="row alert-secondary p-0 m-0">
    <h4 class="p-2">@Model.ProductName</h4>
</div>
<div class="row p-3 m-0">
    <hr />
    <div class="col-md-1"></div>
    <div class="card col-md-5 col-12 p-2 border-0 align-content-center" >
        @{ var img = Model.ProductId + ".jpg";}
        <img class="ty" src="~/Images/@img" id="productimg" style="width:100%;height:auto;z-index:9999" />
    </div>
    <div class="col-md-1"></div>
    <div class="card p-3 col-md-5 col-12">
        <dl>
            <dd class="card-title" style="font-size:1.1rem">
                @Html.DisplayFor(model => model.ProductName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BrandName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BrandName)
            </dd>

            <dd>

                <div class="font-weight-bolder d-inline" style="font-size:1.5rem;">
                    R @(Model.Price - Model.Discount / 100 * Model.Price)
                </div>
                @if (Model.Discount != 0)
                {
                    <s class="text-muted ml-2">  R @Html.DisplayFor(model => model.Price) </s> <br />
                }
            </dd>

            @if (Model.Discount != 0)
            {
                <dd class="font-weight-bold text-success">
                    @Html.DisplayFor(model => model.Discount)% Off
                </dd>
            }
            else
            {
                <dt class="text-warning">No Discount Available!</dt>
            }
            @if (Model.Units > 0)
            {
                <div class="text-success">In Stock!!</div>
            }
            else
            {
                <div class="text-danger">Out of Stock!</div>
                <div class="text-black-50 font-weight-bold">Coming Soon!</div>
            }
            <dt class="pt-3">
                Seller:
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Supplier.Name)
            </dd>
            <div class="mt-3 ml-2">

                @using (Html.BeginForm("AddtoCart", "Product", FormMethod.Post, new { @class = "form" }))
                {
                    int min = 1;
                    int max = Model.Units;
                    if (Model.Units == 0)
                    {
                        min = 0;
                        max = 0;
                    }
                    <div class="row">
                        <div class="input-group col-6">
                            <div class="input-group-prepend">
                                <span class="btn" onclick="decreaseVal()">
                                    <span class="fa fa-minus"></span>
                                </span>
                            </div>
                            @Html.TextBox("Itemno", min, new { @class = "form-control text-center border-0", @placeholder = "Quantity", @type = "number", @min = min, @max = max, @editable = "readonly" })


                            <div class="input-group-append">
                                <span class="btn" onclick="increaseVal()">
                                    <span class="fa fa-plus"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                    <script>
                        var value = parseInt(document.getElementById('Itemno').value, 10);
                        value = isNaN(value) ? 0 : value;
                        function increaseVal() {
                            var max=@max;
                            value++;
                            if (value > max)
                                alert("OutOfStok Amount");
                                value = max;

                            document.getElementById('Itemno').value = value;
                        }
                        function decreaseVal() {
                           value--;
                           if (value <= 0)
                               value = 1;
                           document.getElementById('Itemno').value = value;
                        }
                        function stork() {
                            if (value > max) {
                                alert("OutOfStok Amount");
                            }
                        }
                    </script>
                    @Html.HiddenFor(m => m.ProductId, new { @class = "form-control", @value = Model.ProductId })
                    <div class="row">
                        <button type="submit" class=" btn btn-success m-3 col-5">Add to Cart <i class="fa fa-cart-plus"></i></button>
                    </div>

                    @*<div class="row mt-3">
                <div class="col-md-6">
                    <label for="Size">Size:</label>
                    @Html.DropDownList("Size", new SelectList(new[] { "XS", "S", "M","L","XL","XXL" }), new { @class = "form-control" })
                </div>
                <div class="col-md-6">
                    <label for="NameBadge">Enter Your name:</label>
                    @Html.TextBox("Enter Your name:", "", new { @class = "form-control" })
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-md-6">
                    <label for="BadgeLocation">Badge Location:</label>
                    @Html.DropDownList("BadgeLocation", new SelectList(new[] { "Right front Chest", "Center Back" }), new { @class = "form-control" })
                </div>
                <div class="col-md-6">
                    <label for="ClothColor">Cloth Color:</label>
                    @Html.DropDownList("ClothColor", new SelectList(new[] { "White", "Black", "Green", "Yellow" }), new { @class = "form-control" })
                </div>
            </div>*@


                  

                    <form id="orderForm">
                        <label for="size">Size:</label>
                        <select id="size" name="size" required>
                            <option value="">Select Size</option>
                            <option value="S">S</option>
                            <option value="M">M</option>
                            <option value="L">L</option>
                            <option value="XL">XL</option>
                            <option value="SSL">SSL</option>
                        </select><br>

                        <label for="badgeName">Badge Name:</label>
                        <input type="text" id="badgeName" name="badgeName" required>@*@Session["Username"]*@<br>

                        <label for="badgeLocation">Badge Location:</label>
                        <select id="badgeLocation" name="badgeLocation" required>
                            <option value="">Select Badge Location</option>
                            <option value="Front center">Front center</option>
                            <option value="Upper back">Upper back</option>
                        </select><br>

                        <label for="clothColor">Cloth Color:</label>
                        <select id="clothColor" name="clothColor" required>
                            <option value="">Select Cloth Color</option>
                            <option value="White">White</option>
                            <option value="Grey">Grey</option>
                            <option value="Blue">Blue</option>
                            <option value="Purple">Purple</option>
                        </select><br>

                        <button type="button" onclick="addToCart()">AddCastoms</button>
                    </form>

                    <button id="updateButton" style="display:none;" onclick="showForm()">Update Order</button>
                    <script>
                        function addToCart() {
                            var size = document.getElementById('size').value;
                            var badgeName = document.getElementById('badgeName').value;
                            var badgeLocation = document.getElementById('badgeLocation').value;
                            var clothColor = document.getElementById('clothColor').value;

                            if (size && badgeName && badgeLocation && clothColor) {
                                var orderDetails = {
                                    size: size,
                                    badgeName: badgeName,
                                    badgeLocation: badgeLocation,
                                    clothColor: clothColor
                                };

                                sessionStorage.setItem('orderDetails', JSON.stringify(orderDetails));
                                alert('Order details added to cart!');

                                // Hide the form and show the update button
                                document.getElementById('orderForm').style.display = 'none';
                                document.getElementById('updateButton').style.display = 'block';
                            } else {
                                alert('Please fill in all fields.');
                            }
                        }

                        function showForm() {
                            // Show the form and hide the update button
                            document.getElementById('orderForm').style.display = 'block';
                            document.getElementById('updateButton').style.display = 'none';

                            // Populate the form with existing order details if available
                            var orderDetails = JSON.parse(sessionStorage.getItem('orderDetails'));
                            if (orderDetails) {
                                document.getElementById('size').value = orderDetails.size;
                                document.getElementById('badgeName').value = orderDetails.badgeName;
                                document.getElementById('badgeLocation').value = orderDetails.badgeLocation;
                                document.getElementById('clothColor').value = orderDetails.clothColor;
                            }
                        } function addToCart() {
                            var size = document.getElementById('size').value;
                            var badgeName = document.getElementById('badgeName').value;
                            var badgeLocation = document.getElementById('badgeLocation').value;
                            var clothColor = document.getElementById('clothColor').value;

                            if (size && badgeName && badgeLocation && clothColor) {
                                var orderDetails = {
                                    size: size,
                                    badgeName: badgeName,
                                    badgeLocation: badgeLocation,
                                    clothColor: clothColor
                                };

                                sessionStorage.setItem('orderDetails', JSON.stringify(orderDetails));
                                alert('Order details Saved, You can add to cart');

                                // Hide the form and show the update button
                                document.getElementById('orderForm').style.display = 'none';
                                document.getElementById('updateButton').style.display = 'block';
                            } else {
                                alert('Please fill in all fields.');
                            }
                        }

                        function showForm() {
                            // Show the form and hide the update button
                            document.getElementById('orderForm').style.display = 'block';
                            document.getElementById('updateButton').style.display = 'none';

                            // Populate the form with existing order details if available
                            var orderDetails = JSON.parse(sessionStorage.getItem('orderDetails'));
                            if (orderDetails) {
                                document.getElementById('size').value = orderDetails.size;
                                document.getElementById('badgeName').value = orderDetails.badgeName;
                                document.getElementById('badgeLocation').value = orderDetails.badgeLocation;
                                document.getElementById('clothColor').value = orderDetails.clothColor;
                            }
                        }
                    </script>
                }
            </div>
        </dl>
    </div>
</div>
<hr />
<div class="row p-4 m-0">
    <div class="card col-md-10">
        <b class="card-header">Ratings and Reviews</b>
        <ul>
            @foreach (var feedbacks in Model.Feedbacks)
            {
                <li class="mt-2">
                    <div>@feedbacks.FeedBack</div>
                    <div class="font-italic"> - @feedbacks.Users.Firstname</div>
                </li>
            }
        </ul>
    </div>
</div>
E


